version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_DB: premier_league
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1q2w3e4r!
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      # Run your schema on first init:
      - ./backend/schema.sql:/docker-entrypoint-initdb.d/001-schema.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d premier_league"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres-exporter
    environment:
      # '!' must be URL-encoded as %21
      DATA_SOURCE_NAME: "postgresql://postgres:1q2w3e4r%21@postgres:5432/premier_league?sslmode=disable"
    volumes:
      - ./queries.yaml:/etc/postgres-exporter/queries.yaml:ro
    command:
      - "--extend.query-path=/etc/postgres-exporter/queries.yaml"
    ports:
      - "9187:9187"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    ports:
      - "9100:9100"
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    depends_on:
      - postgres-exporter
      - node-exporter
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3030:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_LOG_LEVEL=debug
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - prometheus
    restart: unless-stopped

  ingest-full:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ingest-full
    command: ["python", "fpl_full_ingest.py", "--include-current"]
    environment:
      DB_NAME: premier_league
      DB_USER: postgres
      DB_PASSWORD: 1q2w3e4r!
      DB_HOST: postgres
      DB_PORT: "5432"
    depends_on:
      postgres:
        condition: service_healthy
    restart: "no"  # runs once and exits

volumes:
  pgdata:
